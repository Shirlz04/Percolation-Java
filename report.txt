1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<<20>>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between <<< and >>> signs below (eg, <<<3>>>).

   <<<2>>>

3. Provide a short description of how you approached each problem, issues you 
   encountered, and how you resolved those issues.

   Problem 1 (Model a Percolation System): In order to get a visual understanding 
        of the different sites I created another 2D matrix for the interger that
        I would use to represent each site. This made it alot easier to see which
        sites were being connected. To resolve the back wash issue, I figured out
        that the visualizer would make every site full in the last row of sites 
        near the sink. To stop that, I made a conditional statement to only 
        connect sites in the bottom row to the sink if that site was already 
        connected to the source. This way only the sites in the bottom row that 
        would lead to percolation would be full and connected to the sink.

   Problem 2 (Estimate Percolation Threshold): Once problem 1 was correct doing
        problem 2 was very easy because it was just a matter of doing simple 
        calculations. Percolation.java became a data type inside problem 2 and 
        using the percolates() in a for loop to get the results of the experiments
        to calculate the mean, standard deviation along with the low and high
        endpoint of 95% confidence interval. 

4. Did you receive help from anyone? List their names, status (classmate, 
   CS210 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   ----               ------       -------------

   I did not recieve any help from anyone outside getting clarification of the 
   problem on piazza and watched youtube videos.

5. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

   I enjoyed this problem only because I learned that I can get eager to code 
   without fully understanding what needs to be done. That's where I begin to 
   over think the problem which makes the project seem more difficult than it 
   actually is.
